"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{GLTFBlock:()=>GLTFBlock,default:()=>_default});const _three=_interopRequireWildcard(require("three"));const _react=require("react");const _reactResizeDetector=require("react-resize-detector");const _fiber=require("@react-three/fiber");const _drei=require("@react-three/drei");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}function GLTF({src}){const{scene}=(0,_drei.useGLTF)(src);const{camera}=(0,_fiber.useThree)();const box=new _three.Box3().setFromObject(scene);const size=box.getSize(new _three.Vector3);const center=box.getCenter(new _three.Vector3);(0,_react.useEffect)(()=>{camera.position.set(size.x,size.y,size.z);camera.lookAt(center)},[camera,scene.position]);return React.createElement("mesh",null,React.createElement("primitive",{object:scene}),React.createElement(_drei.OrbitControls,{target:center}))}function GLTFBlock(props){const src=props.children[0];return React.createElement("div",{className:"inkdrop-gltf-canvas",style:{height:"20vh",width:"100%"}},React.createElement(_fiber.Canvas,{flat:true,linear:true},React.createElement("ambientLight",{intensity:.5}),React.createElement(GLTF,{src:src})))}const _default=(0,_reactResizeDetector.withResizeDetector)(GLTFBlock);